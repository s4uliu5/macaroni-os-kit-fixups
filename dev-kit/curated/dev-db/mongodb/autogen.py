#!/usr/bin/env python3

async def generate(hub, **pkginfo):
	pkginfo.update({
		"github_user": "mongodb",
		"github_repo": "mongo",
		"python_compat": "python3+"
	})

	versions = {
		"3.6": {"keywords": "*"},
		"4.0": {"keywords": "*"},
		"4.2": {"keywords": "*"},
		"4.4": {"keywords": "*"},
		"latest": {"keywords": ""}
	}

	processed = set()
	for maj_min, extra_pkginfo in versions.items():
		if maj_min == "latest":
			select = "([0-9.]+)"
		else:
			# skipping odd (not stable) minor versions:
			select = f"({maj_min}\\.[0,2,4,8]+)"
		rel_pkginfo = await hub.pkgtools.github.tag_gen(
			hub,
			pkginfo["github_user"],
			pkginfo["github_repo"],
			transform=lambda x: x.lstrip("r"),
			select=select,
			filter=[".*alpha", ".*rc[0-9]+"]
		)
		if not rel_pkginfo:
			continue
		pkginfo.update(extra_pkginfo)
		pkginfo.update(rel_pkginfo)
		v = pkginfo["version"]
		# See if there are newer versions:
		if maj_min != "latest":
			processed.add(v)
		else:
			# Print a warning if there is a newer major/minor version we haven't autogenerated:
			if v not in processed:
				hub.pkgtools.model.log.warning(f"MongoDB has a new version that we are not autogenning: {v}")
				continue
		ebuild = hub.pkgtools.ebuild.BreezyBuild(
			**pkginfo,
			template=f'mongodb-{maj_min}.tmpl',
		)
		ebuild.push()

# vim: ts=4 sw=4 noet
