#!/usr/bin/env bash
#
# TODO:
# - autogens in same dir as Manifest
# - Manifest with DIST entries
#
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

errors=0
cyan="\e[1;36m"
norm="\e[m"
yuck="\e[1;31m"

if [ -z "$(which pylint )" ]; then
	echo -e "${yuck}!!" pylint is not in your path.${norm}
	echo "   Please install pylint via pip3 install --user pylint,"
	echo "   then add ~/.local/bin to your path to resolve."
	exit 1
fi
set -o pipefail
echo -e "== ${cyan}Checking Python${norm}"
for pyfile in $(find . -type f -name '*.py' | xargs git diff --cached --name-only $against); do
	py_out="$(git show :0:$pyfile | pylint -E --from-stdin $pyfile | tail -n +2 | sed -e 's/^/!! /')"
	if [ $? -ne 0 ]; then
		echo -e "${yuck}$py_out${norm}"
		errors=$(( $errors + 1 ))
	else
		echo "OK $pyfile"
	fi
done

echo -e "== ${cyan}Checking Ebuilds and Templates${norm}"
for f in $(find . -type f \( -name "*.ebuild" -o -name "*.tmpl" \) | xargs git diff --cached --name-only $against); do
	if [ -n "$( git show :0:$f | head -n1 | grep '[Cc]opyright' )" ]; then
		echo -e "${yuck}!! $f${norm}"
		echo -e "   Please remove initial copyright line."
		errors=$(( $errors + 1 ))
	else
		echo "OK $f"
	fi
done

echo -e "== ${cyan}Checking YAML${norm}"
for yf in $(find . -type f -name "*.yaml" | xargs git diff --cached --name-only $against); do
	y_out=$(git show :0:$yf | $SCRIPT_DIR/tools/yamllint)
	if [ $? -ne 0 ]; then
		echo -e "${yuck}!!" $yf${norm}
		echo -e "$y_out"
		errors=$(( $errors + 1 ))
	else
		echo "OK" $yf
	fi
done
if [ $errors -gt 0 ]; then
	echo -e "${yuck}!! Errors were encountered. Commit aborted.${norm}"
	exit 1
else
	echo "OK All checks passed."
fi
